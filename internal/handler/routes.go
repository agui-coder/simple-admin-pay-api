// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	base "github.com/agui-coder/simple-admin-pay-api/internal/handler/base"
	demo "github.com/agui-coder/simple-admin-pay-api/internal/handler/demo"
	notify "github.com/agui-coder/simple-admin-pay-api/internal/handler/notify"
	order "github.com/agui-coder/simple-admin-pay-api/internal/handler/order"
	refund "github.com/agui-coder/simple-admin-pay-api/internal/handler/refund"
	"github.com/agui-coder/simple-admin-pay-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/pay/init/database",
				Handler: base.InitDatabaseHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/order/submit",
					Handler: order.SubmitPayOrderHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/update",
					Handler: order.UpdateOrderHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/get",
					Handler: order.GetOrderHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/page",
					Handler: order.GetOrderPageHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/get-detail",
					Handler: order.GetOrderDetailHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/pay"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/notify/order/:channelCode",
					Handler: notify.NotifyOrderHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/notify/refund",
					Handler: notify.NotifyRefundHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/pay"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/demo-order/create",
					Handler: demo.CreateDemoOrderHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/demo-order/page",
					Handler: demo.GetDemoOrderPageHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/demo-order/get/:id",
					Handler: demo.GetDemoOrderHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/demo-order/update-paid",
					Handler: demo.UpdateDemoOrderPaidHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/demo-order/refund",
					Handler: demo.RefundDemoOrderHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/demo-refund/update-paid",
					Handler: demo.UpdateDemoRefundPaidHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/pay"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/refund/get",
					Handler: refund.GetRefundHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/refund/page",
					Handler: refund.GetRefundPageHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/pay"),
	)
}
