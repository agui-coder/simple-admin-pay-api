// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// required : true
	// min : 0
	Page uint64 `json:"page" validate:"required,number,gt=0"`
	// Page size | 单页数据行数
	// required : true
	// max : 100000
	PageSize uint64 `json:"pageSize" validate:"required,number,lt=100000"`
}

// The page request parameters | 列表请求参数
// swagger:model PageAtPathInfo
type PageAtPathInfo struct {
	// Page number | 第几页
	// required : true
	// min : 0
	Page uint64 `form:"page" validate:"required,number,gt=0"`
	// Page size | 单页数据行数
	// required : true
	// max : 100000
	PageSize uint64 `form:"pageSize" validate:"required,number,lt=100000"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDReq
type IDReq struct {
	// ID
	// Required: true
	Id uint64 `json:"id" validate:"number"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDAtPathReq
type IDAtPathReq struct {
	// ID
	// Required: true
	Id uint64 `path:"id" validate:"number"`
}

// Basic IDs request | 基础ID数组参数请求
// swagger:model IDsReq
type IDsReq struct {
	// IDs
	// Required: true
	Ids []uint64 `json:"ids"`
}

// Basic ID request | 基础ID地址参数请求
// swagger:model IDPathReq
type IDPathReq struct {
	// ID
	// Required: true
	Id uint64 `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
// swagger:model UUIDReq
type UUIDReq struct {
	// ID
	// Required: true
	// Max length: 36
	Id string `json:"id" validate:"len=36"`
}

// Basic UUID array request | 基础UUID数组参数请求
// swagger:model UUIDsReq
type UUIDsReq struct {
	// Ids
	// Required: true
	Ids []string `json:"ids"`
}

// The base ID response data | 基础ID信息
// swagger:model BaseIDInfo
type BaseIDInfo struct {
	// ID
	Id *uint64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base UUID response data | 基础UUID信息
// swagger:model BaseUUIDInfo
type BaseUUIDInfo struct {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// swagger:model ProductPropertyValueDetailResp
type ProductPropertyValueDetailResp struct {
	// propertyId
	PropertyId *uint64 `json:"propertyId"`
	// propertyName
	PropertyName *string `json:"propertyName"`
	// valueId
	ValueId *uint64 `json:"valueId"`
	// valueName
	ValueName *string `json:"valueName"`
}

// The response data of app information | App信息
// swagger:model AppInfo
type AppInfo struct {
	BaseIDInfo
	// Status
	Status *uint32 `json:"status,optional" validate:"omitempty,"`
	// Name
	Name *string `json:"name,optional" validate:"omitempty,"`
	// Remark
	Remark *string `json:"remark,optional" validate:"omitempty,"`
	// OrderNotifyUrl
	OrderNotifyUrl *string `json:"orderNotifyUrl,optional" validate:"omitempty,"`
	// RefundNotifyUrl
	RefundNotifyUrl *string `json:"refundNotifyUrl,optional" validate:"omitempty,"`
}

// swagger:model AppInfoResp
type AppInfoResp struct {
	BaseDataInfo
	Data AppInfo `json:"appInfo"`
}

// swagger:model AppBaseReq
type AppBaseReq struct {
	// Status
	Status uint32 `json:"status" validate:"inEnum=common_status"`
	// Name
	Name string `json:"name"`
	// Remark
	Remark *string `json:"remark,optional"`
	// OrderNotifyUrl
	OrderNotifyUrl string `json:"orderNotifyUrl" validate:"url"`
	// RefundNotifyUrl
	RefundNotifyUrl string `json:"refundNotifyUrl" validate:"url"`
}

// swagger:model AppBaseResp
type AppBaseResp struct {
	// Status
	Status *uint32 `json:"status,optional"`
	// Name
	Name *string `json:"name,optional"`
	// Remark
	Remark *string `json:"remark,optional"`
	// OrderNotifyUrl
	OrderNotifyUrl *string `json:"orderNotifyUrl,optional"`
	// RefundNotifyUrl
	RefundNotifyUrl *string `json:"refundNotifyUrl,optional"`
}

// swagger:model AppCreateReq
type AppCreateReq struct {
	AppBaseReq
}

// swagger:model AppUpdateReq
type AppUpdateReq struct {
	AppBaseReq
	Id uint64 `json:"id"`
}

// swagger:model AppPageItemResp
type AppPageItemResp struct {
	AppBaseResp
	Id           *uint64   `json:"id"`
	CreateAt     *int64    `json:"createAt"`
	ChannelCodes []*string `json:"channelCodes"`
}

// The response data of app list | App列表数据
// swagger:model AppListResp
type AppListResp struct {
	BaseListInfo
	// App list data | App列表数据
	Data []AppPageItemResp `json:"data"`
}

// Get app list request params | App列表请求参数
// swagger:model AppListReq
type AppListReq struct {
	PageInfo
	// Name 应用名
	Name *string `json:"name,optional"`
	// Status 开启状态
	Status *uint8 `json:"status,optional"`
	// CreateTime 创建时间
	CreateAt []int64 `json:"createAt,optional"`
}

// swagger:model AppUpdateStatusReq
type AppUpdateStatusReq struct {
	Id uint64 `json:"id"`
	// Status
	Status uint32 `json:"status"`
}

// The response data of order information | Order信息
// swagger:model OrderInfo
type OrderInfo struct {
	BaseIDInfo
	// Status
	Status *uint32 `json:"status,optional"`
	// AppId
	AppId *uint64 `json:"appId,optional"`
	// ChannelId
	ChannelId *uint64 `json:"channelId,optional"`
	// ChannelCode
	ChannelCode *string `json:"channelCode,optional"`
	// MerchantOrderId
	MerchantOrderId *string `json:"merchantOrderId,optional"`
	// Subject
	Subject *string `json:"subject,optional"`
	// Body
	Body *string `json:"body,optional"`
	// NotifyUrl
	NotifyUrl *string `json:"notifyUrl,optional"`
	// Price
	Price *int32 `json:"price,optional"`
	// ChannelFeeRate
	ChannelFeeRate *float64 `json:"channelFeeRate,optional"`
	// ChannelFeePrice
	ChannelFeePrice *int32 `json:"channelFeePrice,optional"`
	// UserIp
	UserIp *string `json:"userIp,optional"`
	// ExpireTime
	ExpireTime *int64 `json:"expireTime,optional"`
	// SuccessTime
	SuccessTime *int64 `json:"successTime,optional"`
	// NotifyTime
	NotifyTime *int64 `json:"notifyTime,optional"`
	// ExtensionId
	ExtensionId *uint64 `json:"extensionId,optional"`
	// No
	No *string `json:"no,optional"`
	// RefundPrice
	RefundPrice *int32 `json:"refundPrice,optional"`
	// ChannelUserId
	ChannelUserId *string `json:"channelUserId,optional"`
	// ChannelOrderNo
	ChannelOrderNo *string `json:"channelOrderNo,optional"`
}

// swagger:model OrderInfoResp
type OrderInfoResp struct {
	BaseDataInfo
	Data *OrderInfo `json:"data"`
}

type OrderExtension struct {
	No                *string `json:"no"`
	ChannelNotifyData *string `json:"channelNotifyData"`
}

type OrderDetail struct {
	OrderInfo
	AppName   *string         `json:"appName"`
	Extension *OrderExtension `json:"extension"`
}

// swagger:model OrderDetailResp
type OrderDetailResp struct {
	BaseDataInfo
	Data *OrderDetail `json:"data"`
}

// swagger:model OrderPageReq
type OrderPageReq struct {
	PageInfo
	AppId           *uint64 `json:"appId"`
	ChannelCode     *string `json:"channelCode"`
	Status          *uint32 `json:"status"`
	MerchantOrderId *string `json:"merchantOrderId"`
	ChannelOrderNo  *string `json:"channelOrderNo"`
	No              *string `json:"no"`
	CreateAt        []int64 `json:"createAt"`
}

// swagger:model OrderPageResp
type OrderPageResp struct {
	BaseListInfo
	Data []*OrderInfo `json:"data"`
}

// swagger:model OrderSubmitReq
type OrderSubmitReq struct {
	Id            uint64            `json:"id"`
	ChannelCode   string            `json:"channelCode"`
	ChannelExtras map[string]string `json:"channelExtras,optional"`
	DisplayMode   string            `json:"displayMode,optional"`
	ReturnUrl     string            `json:"returnUrl,optional"`
}

// swagger:model OrderSubmitResp
type OrderSubmitResp struct {
	Status         *uint32 `json:"status"`
	DisplayMode    *string `json:"displayMode"`
	DisplayContent *string `json:"displayContent"`
}

type ChannelBase struct {
	Status  uint32  `json:"status" validate:"inEnum=common_status"`
	Remark  *string `json:"remark,optional"`
	FeeRate float64 `json:"feeRate"`
	AppId   uint64  `json:"appId"`
}

// swagger:model ChannelBaseResp
type ChannelBaseResp struct {
	Status  *uint32  `json:"status"`
	Remark  *string  `json:"remark,optional"`
	FeeRate *float64 `json:"feeRate"`
	AppId   *uint64  `json:"appId"`
}

// swagger:model ChannelCreateReq
type ChannelCreateReq struct {
	ChannelBase
	Code   string `json:"code"`
	Config string `json:"config"`
}

// swagger:model ChannelReq
type ChannelReq struct {
	Id    *uint64 `json:"id,optional"`
	AppId *uint64 `json:"appId,optional"`
	Code  *string `json:"code,optional "`
}

// swagger:model ChannelInfo
type ChannelInfo struct {
	ChannelBaseResp
	Id       *uint64 `json:"id,optional"`
	Code     *string `json:"code,optional "`
	CreateAt *int64  `json:"createAt,optional"`
	Config   *string `json:"config"`
}

// swagger:model ChannelInfoResp
type ChannelInfoResp struct {
	BaseDataInfo
	Data ChannelInfo `json:"data"`
}

// swagger:model ChannelUpdateReq
type ChannelUpdateReq struct {
	ChannelBase
	Id     uint64 `json:"code"`
	Config string `json:"config"`
}

// swagger:model ChannelListResp
type ChannelListResp struct {
	BaseListInfo
	Channels []*string `json:"channels"`
}

type NotifyRep struct {
	ChannelId uint64              `path:"channelId"`
	Body      []byte              `json:"body,optional"`
	Header    map[string][]string `form:"header,optional"`
}

// demoOrder demoOrder information | demoOrder信息
// swagger:model DemoOrderInfo
type DemoOrderInfo struct {
	Id             *uint64 `json:"id"`
	CreateAt       *int64  `json:"createAt"`
	UpdateAt       *int64  `json:"updateAt"`
	SpuId          *uint64 `json:"spuId"`
	SpuName        *string `json:"spuName"`
	Price          *int32  `json:"price"`
	PayStatus      *bool   `json:"payStatus"`
	PayOrderId     *uint64 `json:"payOrderId" validate:"omitempty,"`
	PayTime        *int64  `json:"payTime" validate:"omitempty,"`
	PayChannelCode *string `json:"payChannelCode" validate:"omitempty,"`
	PayRefundId    *uint64 `json:"payRefundId" validate:"omitempty,"`
	RefundPrice    *int32  `json:"refundPrice" validate:"omitempty,"`
	RefundTime     *int64  `json:"refundTime" validate:"omitempty,"`
}

// swagger:model DemoOrderListResp
type DemoOrderListResp struct {
	BaseListInfo
	Data []*DemoOrderInfo `json:"data"`
}

// swagger:model createDemoOrderReq
type CreateDemoOrderReq struct {
	SpuId uint64 `json:"spuId"`
}

// swagger:model PayOrderNotifyReq
type PayOrderNotifyReq struct {
	MerchantOrderId string `json:"merchantOrderId"`
	PayOrderId      uint64 `json:"payOrderId"`
}

type PageAtPath struct {
	// required : true
	// min : 0
	Page int32 `path:"page" validate:"required,number,gt=0"`
	// required : true
	// max : 100000
	PageSize int32 `path:"size" validate:"required,number,lt=100000"`
}

// swagger:model PayRefundNotifyReq
type PayRefundNotifyReq struct {
	MerchantOrderId string `json:"merchantOrderId"`
	PayRefundId     uint64 `json:"payRefundId"`
}

// swagger:model RefundInfo
type RefundInfo struct {
	Id                  uint64 `json:"id"`
	Created_at          int64  `json:"createdAt"`
	Updated_at          int64  `json:"updatedAt"`
	Status              uint32 `json:"status"`
	No                  string `json:"no"`
	App_id              uint64 `json:"appId"`
	Channel_id          uint64 `json:"channelId"`
	Channel_code        string `json:"channelCode"`
	Order_id            uint64 `json:"orderId"`
	Order_no            string `json:"orderNo"`
	Merchant_order_id   string `json:"merchantOrderId"`
	Merchant_refund_id  string `json:"merchantRefundId"`
	Notify_url          string `json:"notifyUrl"`
	Pay_price           int64  `json:"payPrice"`
	Refund_price        int64  `json:"refundPrice"`
	Reason              string `json:"reason"`
	User_ip             string `json:"userIp"`
	Channel_order_no    string `json:"channelOrderNo"`
	Channel_refund_no   string `json:"channelRefundNo"`
	Success_time        int64  `json:"successTime"`
	Channel_error_code  string `json:"channelErrorCode"`
	Channel_error_msg   string `json:"channelErrorMsg"`
	Channel_notify_data string `json:"channelNotifyData"`
}

// swagger:model RefundPageReq
type RefundPageReq struct {
	PageInfo
	AppId           *uint64 `json:"appId"`
	ChannelCode     *string `json:"channelCode"`
	Status          *uint32 `json:"status"`
	MerchantOrderId *string `json:"merchantOrderId"`
	ChannelOrderNo  *string `json:"channelOrderNo"`
	No              *string `json:"no"`
	CreateAt        []int64 `json:"createAt"`
}

// swagger:model RefundInfoResp
type RefundInfoResp struct {
	BaseDataInfo
	Data *RefundInfo `json:"data"`
}

// swagger:model RefundPageResp
type RefundPageResp struct {
	BaseListInfo
	Data []*RefundInfo `json:"data"`
}
