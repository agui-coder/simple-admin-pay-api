syntax = "v1"

info(
    title: "pay api"
    desc: "pay api"
    author: "Kevin"
    email: "894784649@qq.com"
    version: "v1.0"
)

type(
    // demoOrder demoOrder information | demoOrder信息
    DemoOrderInfo {
        id *uint64 `json:"id"`
        createAt *int64 `json:"createAt"`
        updateAt *int64 `json:"updateAt"`
        spuId *uint64 `json:"spuId"`
        spuName *string `json:"spuName"`
        price *int32 `json:"price"`
        payStatus *bool `json:"payStatus"`
        payOrderId *uint64 `json:"payOrderId" validate:"omitempty,"`
        payTime *int64 `json:"payTime" validate:"omitempty,"`
        payChannelCode *string `json:"payChannelCode" validate:"omitempty,"`
        payRefundId *uint64 `json:"payRefundId" validate:"omitempty,"`
        refundPrice *int32 `json:"refundPrice" validate:"omitempty,"`
        refundTime *int64 `json:"refundTime" validate:"omitempty,"`
    }

    DemoOrderListResp {
        BaseListInfo
        data []*DemoOrderInfo `json:"data"`
    }


    createDemoOrderReq{
        spuId uint64 `json:"spuId"`
    }

    PayOrderNotifyReq {
        merchantOrderId string `json:"merchantOrderId"`
        payOrderId uint64 `json:"payOrderId"`
    }
    PageAtPath{
        page int32 `path:"page" validate:"required,number,gt=0"`
        pageSize int32 `path:"size" validate:"required,number,lt=100000"`
    }
    PayRefundNotifyReq{
        merchantOrderId string `json:"merchantOrderId"`
        payRefundId uint64 `json:"payRefundId"`
    }
)


@server(
    jwt: Auth
    group: demo
    middleware: Authority,UserIp
)
service Pay {
    // Create demoOrder information | 创建示例订单
    @handler createDemoOrder
    post /demo-order/create (createDemoOrderReq) returns (BaseMsgResp)
    // Get demoOrder Page information | 获得示例订单列表
    @handler getDemoOrderPage
    post /demo-order/page (PageInfo) returns (DemoOrderListResp)
    // Get demoOrder information | 获得示例订单
    @handler getDemoOrder
    get /demo-order/get/:id (IDAtPathReq) returns (DemoOrderInfo)
    // Update demoOrder status | 更新示例订单支付状态
    @handler updateDemoOrderPaid
    post /demo-order/update-paid (PayOrderNotifyReq) returns (BaseMsgResp)
    // Create demoRefund information | 创建退款订单
    @handler createDemoRefund
    post /demo-order/refund (IDReq) returns (BaseMsgResp)
    // Update demoRefund status | 更新退款订单支付状态
    @handler updateDemoRefundPaid
    post /demo-refund/update-paid (PayRefundNotifyReq) returns (BaseMsgResp)
}